---
import type { HTMLAttributes } from "astro/types";
import Chip from "./Chip.astro";
import type { Props as ChipProps } from "./Chip.astro";

// Define the props interface for the SecretToggleButton
export interface Props extends Omit<HTMLAttributes<"button">, "class"> {
  showSecret?: boolean;
  className?: string;
  size?: ChipProps["size"];
}

// Destructure props with defaults
const {
  showSecret = false,
  className = "",
  size = "md",
  ...restProps
} = Astro.props;
---

<button
  type="button"
  x-data={`{ 
    showSecret: ${showSecret}
  }`}
  @click="showSecret = !showSecret; $dispatch('secret-toggled', { state: showSecret })"
  :aria-label="showSecret ? 'Hide secret content' : 'Show secret content'"
  :data-state="showSecret ? 'visible' : 'hidden'"
  class="inline-block"
  {...restProps}
>
  <!-- Use x-show to conditionally render the chips -->
  <span x-show="!showSecret">
    <Chip
      color="red"
      size={size}
      withBorder={true}
      icon={{
        name: "eye",
      }}
      class={className}
    >
      DM Only
    </Chip>
  </span>

  <span x-show="showSecret">
    <Chip
      color="green"
      size={size}
      withBorder={true}
      icon={{
        name: "eye-off",
      }}
      class={className}
    >
      DM Only
    </Chip>
  </span>
</button>
