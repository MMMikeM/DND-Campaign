---
import type { HTMLAttributes } from "astro/types";
import { cva, type VariantProps } from "class-variance-authority";
import type { IconAnimation, IconColor, IconName, IconSpacing } from "types/icon";
import { Icon as AstroIcon } from 'astro-icon/components';


const iconColor: Record<IconColor, string> = {
  current: "text-current",
  white: "text-white",
  black: "text-black",
  gray: "text-gray-500 dark:text-gray-400",
  blue: "text-blue-500 dark:text-blue-400",
  green: "text-green-500 dark:text-green-400",
  red: "text-red-500 dark:text-red-400",
  yellow: "text-yellow-500 dark:text-yellow-400",
  purple: "text-purple-500 dark:text-purple-400",
  indigo: "text-indigo-500 dark:text-indigo-400",
  teal: "text-teal-500 dark:text-teal-400",
  pink: "text-pink-500 dark:text-pink-400",
  amber: "text-amber-500 dark:text-amber-400",
  cyan: "text-cyan-500 dark:text-cyan-400"
}

// Define the icon variants using CVA
const iconStyles = cva("inline-block", {
  variants: {
    size: {
      xs: "w-3 h-3",
      sm: "w-4 h-4",
      md: "w-5 h-5",
      lg: "w-6 h-6",
      xl: "w-8 h-8",
    },
    color: {
      ...iconColor,
    },
    animation: {
      none: "",
      spin: "animate-spin",
      pulse: "animate-pulse",
      bounce: "animate-bounce",
    },
    spacing: {
      none: "",
      xs: "mr-1",
      sm: "mr-2",
      md: "mr-3",
      lg: "mr-4",
    },
    spacingPosition: {
      left: "",
      right: "",
    },
  },
  compoundVariants: [
    {
      spacingPosition: "right",
      spacing: "xs",
      class: "ml-1 mr-0",
    },
    {
      spacingPosition: "right",
      spacing: "sm",
      class: "ml-2 mr-0",
    },
    {
      spacingPosition: "right",
      spacing: "md",
      class: "ml-3 mr-0",
    },
    { 
      spacingPosition: "right",
      spacing: "lg",
      class: "ml-4 mr-0",
    },
  ],
  defaultVariants: {
    size: "md",
    color: "current",
    animation: "none",
    spacing: "none",
    spacingPosition: "left",
  },
});

// Extract the VariantProps but omit color to avoid conflict with HTMLAttributes
type IconVariantProps = Omit<VariantProps<typeof iconStyles>, 'color'>;




// Props interface
export interface Props extends HTMLAttributes<"span">, IconVariantProps {
  name: IconName;
  label?: string;
  className?: string;
  isInteractive?: boolean;
  spacing?: IconSpacing;
  spacingPosition?: "left" | "right";
  animation?: IconAnimation;
  color?: IconColor;
}

// Destructure props with defaults
const {
  name,
  size = "md",
  color = "current",
  label,
  className = "",
  isInteractive = false,
  spacing = "none",
  spacingPosition = "left",
  animation = "none",
} = Astro.props;


---

<span 
  class={iconStyles({ size, color, animation, spacing, spacingPosition, className })} 
  aria-label={label}
  role={label ? "img" : undefined}
  aria-hidden={!label}
  tabindex={isInteractive ? 0 : undefined}
>
  <AstroIcon name={`lucide:${name}`} />
</span>