---
import SecretToggleButton from "@components/SecretToggleButton.astro";
import GradientCard from "./GradientCard.astro";
import type { Props as GradientCardProps } from "./GradientCard.astro";
import Chip from "@components/Chip.astro";

interface Props extends GradientCardProps {
  isInitiallyBlurred?: boolean;
}

const {
  isInitiallyBlurred = true,
  colorTheme = "indigo",
  ...props
} = Astro.props;
---

<div
  x-data={`{ 
    isBlurred: ${isInitiallyBlurred} 
  }`}
  class="relative"
>
  <GradientCard colorTheme={colorTheme} {...props}>
    <div slot="header" class="flex items-center justify-between w-full">
      <div class="flex-1">
        <slot name="header" />
      </div>

      <!-- Using the Chip-based SecretToggleButton -->
      <SecretToggleButton
        showSecret={!isInitiallyBlurred}
        size="sm"
        className="ml-2"
        @click="isBlurred = !isBlurred"
      />
    </div>

    <div class="relative">
      <div
        class="absolute inset-0 flex items-center justify-center pointer-events-none z-10 transition-opacity duration-300"
        :class="isBlurred ? 'opacity-100' : 'opacity-0'"
      >
        <Chip color="red" size="md" withBorder={true}> Secret </Chip>
      </div>
      <div
        class="transition-all duration-300"
        :class="isBlurred ? 'blur-md select-none' : ''"
      >
        <div
          class="absolute inset-0 flex items-center justify-center pointer-events-none"
          x-show="isBlurred"
        >
        </div>
        <slot />
      </div>
    </div>
  </GradientCard>
</div>

<script>
  // Global event listener for secret-toggled events
  document.addEventListener("DOMContentLoaded", () => {
    document.addEventListener("secret-toggled", (event) => {
      const target = event.target;
      if (!target) return;
      const container = target.closest("[x-data]");

      if (container) {
        const alpine = window.Alpine;
        if (alpine) {
          const data = alpine.$data(container);
          data.isBlurred = !event.detail.state;
        }
      }
    });
  });
</script>
