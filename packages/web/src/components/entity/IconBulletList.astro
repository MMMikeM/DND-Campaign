---
import GradientCard from "@components/cards/GradientCard.astro";
import Icon from "@components/Icon.astro";
import type { IconName } from "types/icon";
import type { ColorTheme } from "types";

export interface BulletItem {
  text: string;
  icon?: IconName;
  href?: string;
  badge?: string;
  badgeColor?: ColorTheme;
}

interface Props {
  title: string;
  items: (string | BulletItem)[];
  icon?: IconName;
  colorTheme?: ColorTheme;
  defaultItemIcon?: IconName;
  className?: string;
}

const { 
  title, 
  items = [], 
  icon = "list", 
  colorTheme = "blue" as ColorTheme, 
  defaultItemIcon = "chevron-right" as IconName,
  className = ""
} = Astro.props;

// Skip rendering if no items
if (!items || items.length === 0) return null;

// Process items to ensure they're all BulletItem objects
const processedItems = items.map(item => {
  if (typeof item === 'string') {
    return {
      text: item,
      icon: defaultItemIcon
    } as BulletItem;
  }
  return {
    ...item,
    icon: item.icon || defaultItemIcon
  } as BulletItem;
});
---

<div class={className}>
  <GradientCard title={title} icon={icon} colorTheme={colorTheme}>
    <ul class="space-y-2 mt-2">
      {processedItems.map(item => (
        <li class="flex items-start">
          <span class="flex-shrink-0 mr-2 mt-0.5">
            <Icon name={item.icon || defaultItemIcon} size="sm" color={colorTheme} />
          </span>
          <div class="flex-grow">
            {item.href ? (
              <a href={item.href} class={`text-${colorTheme}-700 dark:text-${colorTheme}-300 hover:underline`}>
                {item.text}
                {item.badge && (
                  <span class={`ml-2 px-2 py-0.5 text-xs rounded-full bg-${item.badgeColor || colorTheme}-100 text-${item.badgeColor || colorTheme}-800 dark:bg-${item.badgeColor || colorTheme}-900 dark:text-${item.badgeColor || colorTheme}-200`}>
                    {item.badge}
                  </span>
                )}
              </a>
            ) : (
              <span>
                {item.text}
                {item.badge && (
                  <span class={`ml-2 px-2 py-0.5 text-xs rounded-full bg-${item.badgeColor || colorTheme}-100 text-${item.badgeColor || colorTheme}-800 dark:bg-${item.badgeColor || colorTheme}-900 dark:text-${item.badgeColor || colorTheme}-200`}>
                    {item.badge}
                  </span>
                )}
              </span>
            )}
          </div>
        </li>
      ))}
    </ul>
  </GradientCard>
</div> 