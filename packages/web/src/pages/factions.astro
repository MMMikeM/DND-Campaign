---
import Layout from '../layouts/Layout.astro';
import { db } from '../lib/db';
import { factions } from '@tome-keeper/shared';
import { desc } from 'drizzle-orm';

export const prerender = false;

const allFactions = await db.select().from(factions).orderBy(desc(factions.id));
---

<Layout title="Factions">
	<div class="flex justify-between items-center mb-8">
		<h1 class="text-4xl font-bold">Factions</h1>
		<a href="/factions/new" class="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700">
			New Faction
		</a>
	</div>
	
	<div class="grid gap-6 grid-cols-1 md:grid-cols-2 lg:grid-cols-3">
		{allFactions.map((faction) => (
			<div class="bg-white shadow rounded-lg p-6">
				<div class="flex justify-between items-start mb-4">
					<h2 class="text-2xl font-semibold">{faction.name}</h2>
					<div class="flex flex-col items-end gap-1">
						<span class="px-3 py-1 bg-purple-100 text-purple-800 rounded-full text-sm">
							{faction.type}
						</span>
						{faction.alignment && (
							<span class="text-sm text-gray-500">{faction.alignment}</span>
						)}
					</div>
				</div>
				
				{faction.description && (
					<p class="text-gray-600 line-clamp-3 mb-4">{faction.description}</p>
				)}
				
				{faction.headquarters && (
					<p class="text-sm text-gray-500 italic">HQ: {faction.headquarters}</p>
				)}
				
				<div class="mt-4 flex justify-end gap-4">
					<a href={`/factions/${faction.id}`} class="text-blue-600 hover:text-blue-800">
						View
					</a>
					<a href={`/factions/${faction.id}/edit`} class="text-blue-600 hover:text-blue-800">
						Edit
					</a>
					<button
						type="button"
						data-faction-id={faction.id}
						class="text-red-600 hover:text-red-800 delete-faction"
					>
						Delete
					</button>
				</div>
			</div>
		))}
	</div>
	
	{allFactions.length === 0 && (
		<div class="text-center py-10">
			<p class="text-gray-500">No factions found. Create your first faction to get started.</p>
		</div>
	)}
</Layout>

<script>
	document.addEventListener('DOMContentLoaded', () => {
		document.querySelectorAll('.delete-faction').forEach((button) => {
			button.addEventListener('click', async () => {
				const factionId = button.getAttribute('data-faction-id');
				if (!factionId) return;

				if (!confirm('Are you sure you want to delete this faction?')) return;

				try {
					const response = await fetch(`/api/factions/${factionId}`, {
						method: 'DELETE'
					});

					if (response.ok) {
						// Remove the faction card from the UI
						const factionCard = button.closest('.bg-white');
						if (factionCard) {
							factionCard.remove();
						}
					} else {
						const data = await response.json();
						throw new Error(data.error || 'Failed to delete faction');
					}
				} catch (error) {
					console.error('Error:', error);
					alert('An error occurred while deleting the faction');
				}
			});
		});
	});
</script> 