---
import Layout from '../layouts/Layout.astro';
import { db } from '../lib/db';
import { npcs } from '@tome-keeper/shared';
import { desc } from 'drizzle-orm';

const allNpcs = await db.select().from(npcs).orderBy(desc(npcs.id));
---

<Layout title="NPCs">
	<div class="flex justify-between items-center mb-8">
		<h1 class="text-4xl font-bold">NPCs</h1>
		<a href="/npcs/new" class="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700">
			New NPC
		</a>
	</div>
	
	<div class="grid gap-6 grid-cols-1 md:grid-cols-2 lg:grid-cols-3">
		{allNpcs.map((npc) => (
			<div class="bg-white shadow rounded-lg p-6">
				<div class="flex justify-between items-start">
					<h2 class="text-2xl font-semibold">{npc.name}</h2>
					<div class="flex flex-col items-end gap-1">
						<span class="px-3 py-1 bg-purple-100 text-purple-800 rounded-full text-sm">
							{npc.race}
						</span>
						<span class="text-sm text-gray-500">{npc.occupation}</span>
					</div>
				</div>
				
				<p class="mt-4 text-gray-600 line-clamp-3">{npc.background}</p>
				
				{npc.quirk && (
					<p class="mt-2 text-sm text-gray-500 italic">"{npc.quirk}"</p>
				)}
				
				<div class="mt-4 flex justify-end gap-4">
					<a href={`/npcs/${npc.id}`} class="text-blue-600 hover:text-blue-800">
						View
					</a>
					<a href={`/npcs/${npc.id}/edit`} class="text-blue-600 hover:text-blue-800">
						Edit
					</a>
					<button
						type="button"
						data-npc-id={npc.id}
						class="text-red-600 hover:text-red-800 delete-npc"
					>
						Delete
					</button>
				</div>
			</div>
		))}
	</div>
	
	{allNpcs.length === 0 && (
		<div class="text-center py-10">
			<p class="text-gray-500">No NPCs found. Create your first NPC to get started.</p>
		</div>
	)}
</Layout>

<script>
	document.addEventListener('DOMContentLoaded', () => {
		document.querySelectorAll('.delete-npc').forEach((button) => {
			button.addEventListener('click', async () => {
				const npcId = button.getAttribute('data-npc-id');
				if (!npcId) return;

				if (!confirm('Are you sure you want to delete this NPC?')) return;

				try {
					const response = await fetch(`/api/npcs/${npcId}`, {
						method: 'DELETE'
					});

					if (response.ok) {
						// Remove the NPC card from the UI
						const npcCard = button.closest('.bg-white');
						if (npcCard) {
							npcCard.remove();
						}
					} else {
						const data = await response.json();
						throw new Error(data.error || 'Failed to delete NPC');
					}
				} catch (error) {
					console.error('Error:', error);
					alert('An error occurred while deleting the NPC');
				}
			});
		});
	});
</script> 